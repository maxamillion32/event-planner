{"version":3,"sources":["App.js"],"names":[],"mappings":";;;;;;;AACA,CAAC,UAAS,QAAT,EAAmB;AACnB;;;;;;;;AADmB;KASb;;;;;;;AAML,WANK,GAML,GAAc;yBANT,KAMS;;;AAGb,OAAI,QAAQ,IAAI,QAAJ,CAAa,6CAAb,CAAR,CAHS;;AAKb,QAAK,SAAL,GAAmB,IAAI,SAAJ,CAAc,KAAd,CAAnB,CALa;AAMb,QAAK,YAAL,GAAqB,IAAI,YAAJ,EAArB,CANa;AAOb,QAAK,aAAL,GAAqB,IAAI,aAAJ,CAAkB,KAAlB,CAArB,CAPa;AAQb,QAAK,UAAL,GAAmB,IAAI,UAAJ,EAAnB,CARa;AASb,QAAK,MAAL,GAAgB,IAAI,MAAJ,CAAW,KAAX,CAAhB;;;AATa,WAYb,CAAS,gBAAT,CAA0B,WAA1B,EAAuC,YAAW;;AAEjD,SAAK,SAAL,CAAe,MAAf,CAAsB,KAAK,MAAL,CAAY,aAAZ,CAA0B,KAA1B,EAAiC,KAAK,MAAL,CAAY,gBAAZ,CAA6B,KAA7B,CAAvD,CAFiD;IAAX,CAAvC;;;AAZa,WAmBb,CAAS,gBAAT,CAA0B,WAA1B,EAAuC,YAAW;;AAEhD,SAAK,YAAL,CAAkB,QAAlB,GAA8B,KAAK,SAAL,CAAe,QAAf,CAFkB;AAGhD,SAAK,UAAL,CAAgB,QAAhB,GAA4B,KAAK,SAAL,CAAe,QAAf,CAHoB;IAAX,CAAvC;;;;;;AAnBa,SA8Bb,CAAO,cAAP,GAAwB,YAAW;;AAElC,SAAK,SAAL,CAAe,OAAf,GAFkC;AAGlC,aAAS,mBAAT,CAA6B,YAA7B,EAHkC;IAAX,CA9BX;GAAd;;;;;;;;;;;eANK;;kCAoDU;;AAEd,aAAS,mBAAT,CAA6B,WAA7B,EAFc;AAGd,aAAS,mBAAT,CAA6B,WAA7B,EAHc;AAId,WAAO,cAAP,GAAwB,SAAxB,CAJc;;;;SApDV;;;;AATa;;AAwEnB,UAAS,gBAAT,CAA0B,YAA1B,EAAwC,YAAW;;AAElD,MAAI,YAAJ,GAFkD;AAGlD,QAAM,IAAI,GAAJ,EAAN,CAHkD;EAAX,CAAxC,CAxEmB;;AA+EnB,KAAI,MAAM,IAAI,GAAJ,EAAN,CA/Ee;CAAnB,CAAD,CAiFG,QAjFH","file":"App.js","sourcesContent":["/*jshint esversion: 6 */\n(function(document) {\n\t'use strict';\n\n\t/**\n\t * App\n\t * @class App\n\t * @description Starting point for the event planner application\n\t * \n\t */\n\tclass App {\n\n\t\t/**\n\t     * App constructor.\n\t     * @constructs App\n\t     */\n\t\tconstructor() {\n\n\t\t\t// Register the callback to be fired every time auth state changes\n\t\t\tlet fbRef = new Firebase(\"https://swanky-event-planner.firebaseIO.com\");\n\n\t\t\tthis.signInOut = \t new SignInOut(fbRef);\n\t\t\tthis.eventPlanner =  new EventPlanner();\n\t\t\tthis.resetPassword = new ResetPassword(fbRef);\n\t\t\tthis.showEvents =\t new ShowEvents();\n\t\t\tthis.signUp =\t\t new SignUp(fbRef);\n\n\t\t\t// Fired after the user signs up\n\t\t\tdocument.addEventListener(\"signed-up\", function() {\n\n\t\t\t\tthis.signInOut.signIn(this.signUp.signupEmailEl.value, this.signUp.signupPasswordEl.value);\n\n\t\t\t});\n\n\t\t\t// Fired after user signs in\n\t\t\tdocument.addEventListener(\"signed-in\", function() {\n\n\t\t\t  this.eventPlanner.eventRef = \tthis.signInOut.eventRef;\n\t\t\t  this.showEvents.eventRef = \tthis.signInOut.eventRef;\n\n\t\t\t});\n\n\t\t\t/**\n\t\t\t * Sign out on exit\n\t\t\t * \n\t\t\t */\n\t\t\twindow.onbeforeunload = function() {\n\n\t\t\t\tthis.signInOut.signOut();\n\t\t\t\tdocument.removeEventListener('signed-out');\n\n\t\t\t};\n\n\t\t}\n\n\t\t/**\n\t\t * Remove the registered events\n\t\t *  @function removeEvents\n\t\t * \t@memberof App\n\t\t *  @instance\n\t\t *\n\t\t */\n\t\tremoveEvents() {\n\n\t\t\tdocument.removeEventListener('signed-up');\n\t\t\tdocument.removeEventListener('signed-in');\n\t\t\twindow.onbeforeunload = undefined;\n\n\t\t}\n\n\t}\n\n\t// Fired after user signs out\n\tdocument.addEventListener(\"signed-out\", function() {\n\n\t\tapp.removeEvents();\n\t\tapp = new App();\n\n\t});\n\n\tvar app = new App();\n\n})(document);"],"sourceRoot":"/source/"}